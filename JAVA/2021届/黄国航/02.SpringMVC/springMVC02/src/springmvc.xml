<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--配置自定义扫描包-->
    <context:component-scan base-package="com.littlekids8"></context:component-scan>

    <!-- 配置视图解析器：如何把handler方法返回值解析未实际的物理视图-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

<!--
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
            </list>
        </property>
    </bean>
-->
    <bean id= "multipartResolver" class= "org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name= "defaultEncoding" value= "UTF-8"></property>
        <property name= "maxUploadSize" value= "5242880"></property>
    </bean>


    <!--配置自定义拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 拦截所有的请求，这个必须写在前面，也就是写在【不拦截】的上面 -->
            <mvc:mapping path="/emps" />
            <!--一定要有拦截，才能有不拦截-->
            <mvc:exclude-mapping path="testJson"/>
            <!--有不拦截时，bean必须写在不拦截的下面-->
            <bean class="com.littlekids8.intercepters.FirstIntercepter"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--使用SimpleMappingExceptionResolver来映射异常-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!--定义异常存入请求域的名字，可通过requestScope.exception获取到该异常信息-->
        <property name="exceptionAttribute" value="exception"></property>
        <property name="exceptionMappings">
            <props>
                <!--异常类型和发生异常时跳转的页面，同时会把异常信息存入请求域的exception-->
                <prop key="java.lang.ArrayIndexOutOfBoundsException">error</prop>
            </props>
        </property>
    </bean>


    <mvc:default-servlet-handler/>
    <mvc:annotation-driven></mvc:annotation-driven>

</beans>