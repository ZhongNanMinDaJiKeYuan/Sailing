）格式： public class 子类名 extends 父类名{}
范例： public class Zi extends Fu{}
其中extends是继承关系的体现

1.子类可以有父类的内容，子类也可以有独属自己的内容
好处：
多个类相同的成员可以放到同一个类中
如果方法的内容需要修改，只需要修改一处

2.什么时候使用：
有两个类 A and B,如果满足A是B的一种或者B是A的一种就说明他们存在继承关系
举例： 苹果与水果， 猫与动物

3.访问变量先内部，再子类，最后父类

4.super关键字（类似于this）

**访问本类的成员变量，构造方法，成员方法:
this.age  this（构造方法） this（成员方法）

**访问父类的成员变量， 构造方法，成员方法：
super.age super（构造方法） super（成员方法）

5.构造方法的访问特点
**直接调用子类中构造方法会默认访问父类中的无参构造方法，
**原因：子类会继承父类中的数据，可能还会使用父类的数据。所以子类初始化之前，一定要先完成父类数据的初始化
**每一个子类构造方法的第一条语句默认是： super()

6.成员方法的访问特点
就近原则

7.成员方法重写：
@Override
“此处为父类中成员方法的声明，要一模一样”
重写则是在{}中改写
例：
父类中： public void eat() {
            System.out.println("animal eat food")
    }
子类中重写：
        @Override
        public void eat() {
            //原内容：super.eat()
            //现内容：自定义
        }

子类不可继承父类中的私有成员
子类访问权限不能更低：public > 默认 > 私有

8.java支持多层继承：爷 —— 父 —— 子
java不支持多继承 ： 父，母 —— 子（×）

9.package与import

10.权限修饰符
*prviate    限制于同一个类中使用
*protect    限制于同一个类以及同一个包中子类和无关类
*默认        限制于同一个类，同一个包中子类和无关类以及不同包的子类
*public     限制于同一个类，同一个包中子类和无关类，不同包的子类以及不同包的无关类

11.状态修饰符
*final：修饰成员方法，成员变量，类

**final修饰方法：不可被重写
**final修饰成员：常量
**final修饰类：不可以被继承
**final修饰局部变量：对引用类型变量，修饰的是地址，内容可变，地址不可变

*static：被类的所有对象共享

**static对成员： 对所有对象共享（不建议用对象访问，直接用 类名.成员名 访问）
**访问特点：非静态成员方法可以访问所有静态成员，静态成员方法只能访问静态成员